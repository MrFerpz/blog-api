generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Comments {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  content    String?  @db.VarChar
  authorID   BigInt?
  postID     BigInt?
  Users      Users?   @relation(fields: [authorID], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Posts      Posts?   @relation(fields: [postID], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Posts {
  id          BigInt     @id @default(autoincrement())
  created_at  DateTime   @default(now()) @db.Timestamptz(6)
  title       String?    @db.VarChar
  content     String?    @db.VarChar
  isPublished Boolean?   @default(false)
  authorID    BigInt?
  Comments    Comments[]
  Users       Users?     @relation(fields: [authorID], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Users {
  id         BigInt     @id @default(autoincrement())
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  username   String?    @db.VarChar
  password   String?    @db.VarChar
  isAdmin    Boolean?   @default(false)
  isAuthor   Boolean?   @default(false)
  Comments   Comments[]
  Posts      Posts[]
}
